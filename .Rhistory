install.packages ("swirl")
library (swirl)
swirl()
5+7
x<-5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2 +100
mySqrt <- sqrt (z-1)
mySqrt
myDiv <- z/mySqrt
myDiv
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 5) + c (0, 11, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num<-c(0.5,55,-10,6)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char<-c("My", "name", "is")
my_char
paste(my_char, collapse=" ")
my_name<-c(my_char, "Olga")
my_name
paste(my_name, " ")
paste(my_name, collapse=" ")
paste("Hello", "world!", sep=" ")
?paste
paste(c(1,2,3), c("X","Y","Z"), sep="")
paste(1:3, c("X","Y","Z"), sep="")
paste(LETTERS, 1:4, sep="-")
x<-c(44,NA,5,NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
myData<-sample(c(y,z),100)
is.na(myData)
myNA<-is.na(myData)
myNA
myData==NA
sum(myNA)
myData
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf+NA)
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect<-c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vact["bar"]
vect["bar"]
vect[c("foo", "bar")]
myVector<-1:20
myVector
dim(myVector)
length(myVector)
dim(myVector)<- c(4,5)
dim(myvector)
dim(myVector)
attribures(myVector)
attributes(myVector)
myVector
class(myVector)
myMatrix<-myVector
?matrix
myMatrix2<-matrix(1:20,nrow=4,ncol=5)
identical(myMatix,myMatrix2)
identical(myMatrix,myMatrix2)
patients<-c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, myMatrix)
myData<-data.framr(patients, myMatrix)
myData<-data.frame(patients, myMatrix)
myData
class(myData)
cnames<- c("patient", "age", "Wieght", "bp", "rating", "test")
cnames<- c("patient", "age", "Weight", "bp", "rating", "test")
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(myData)<-cnames
myData
x<- factor(c("yes", "no", "yes"))
x
table(x)
?unclass
unclass (x)
class(x)
table(x)
class(x)
?table
y<- factor (c("time", "age", "result", "income", "result"), levels c("age", "time", "income", "result" ))
y<- factor (c("time", "age", "result", "income", "result"), levels= c("age", "time", "income", "result" ))
y
x<- seq(1,10, by=0.4)
x
names(x)
names(x)<-c("time", "result")
x
x<-list (a=3, b=10, c=10)
x
m<-matrix (1:4)
m
dim(m)<-c(2,2)
m
dimnames<-list(c("a", "b"), c("c", "d"))
m
dimnames(m)<-list(c("a", "b"), c("c", "d"))
m
m[1,2]
m[1,2, drop=FALSE]
m[1,2, drop=f]
m[1,2, drop=F]
name<-"a"
x[[name]]
x[name]
x$name
x$aa
x$a
getwd()
setwd("C:/Users/Tuomas/Documents/Olga/R/Coursera Data Science")
getwd()
lst.files
list.files
list.files()
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
Time_edited<-strptime(Feb1_2[ ,"Time"],"%T")
Feb1_2_new<-data.frame(Feb1_2,Time_edited) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 1 Global Active Power histogram
png (file="plot1.png",width=480,height=480,units = "px")
hist(Feb1_2_new[ ,"Global_active_power"], col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
# Plot 2 Global Active Power over time
plot(Feb1_2_new[ ,"Time_edited"],Feb1_2_new[ ,"Global_active_power"], ylab = "Global Active Power (kilowatts)")
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time_edited), format="%Y-%m-%d %H:%M:%S")
test
DateTime<-strptime(c(Feb1_2[ ,"Date"], Feb1_2[ ,"Time"]),"%Y-%m-%d %T")
DatTime
DateTime
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S")
test [0:10]
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S", tz="America/California")
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S", tz="PST")
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S", "PST")
test<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S", "EST")
test
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2_new$Date, Feb1_2_new$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 1 Global Active Power histogram
png (file="plot1.png",width=480,height=480,units = "px")
hist(Feb1_2_new[ ,"Global_active_power"], col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
# Plot 2 Global Active Power over time
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], ylab = "Global Active Power (kilowatts)")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 1 Global Active Power histogram
png (file="plot1.png",width=480,height=480,units = "px")
hist(Feb1_2_new[ ,"Global_active_power"], col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
# Plot 2 Global Active Power over time
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], ylab = "Global Active Power (kilowatts)")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", ylab = "Global Active Power (kilowatts)")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", xlab = NULL, ylab = "Global Active Power (kilowatts)")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)")
png (file="plot2.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)")
dev.off()
str(Feb1_2_new)
plot(Feb1_2_new[ ,"DateTime"],list(Feb1_2_new[ ,"Sub_metering_1"],Feb1_2_new[ ,"Sub_metering_2"],Feb1_2_new[ ,"Sub_metering_3"]), type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)",type="n")
plot(Feb1_2_new, type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)",type="n")
plot(Feb1_2_new, xlab = NA, ylab = "Global Active Power (kilowatts)",type="n")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Global Active Power (kilowatts)",type="n")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Energy sub metering",type="n")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], col = "black", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_2"], col = "red", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_3"], col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"))
legend("topright", col = c("black", "red", "blue"), legend = c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), seg.len=2)
lty=c(1,1)
lwd=c(2.5,2.5),col=c("blue","red"))
lwd=c(2.5,2.5)col=c("blue","red"))
lwd=c(2.5,2.5, 2.5)
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(2.5,2.5,2.5) legend = c("Sub_metering_1", "Sub_metering_1", "Sub_metering_1"), seg.len=2)
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(2.5,2.5,2.5) legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(2.5,2.5,2.5), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Energy sub metering",type="n")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], col = "black", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_2"], col = "red", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_3"], col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
#dev.off()
png (file="plot3.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Energy sub metering",type="n")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], col = "black", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_2"], col = "red", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_3"], col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
par(mfrow = c(2, 2))
with(Feb1_2_new,
{
plot(DateTime, Global_active_power, type= "l", xlab = NA, ylab = "Global Active Power")
plot(DateTime, Voltage, type= "l", xlab = "datetime", ylab = "Global Active Power")
plot(DateTime, Sub_metering_1, xlab = NA, ylab = "Energy sub metering",type="n")
points(DateTime, Sub_metering_1, col = "black", type="l")
points(DateTime, Sub_metering_2, col = "red", type="l")
points(DateTime, Sub_metering_3, col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type= "l", xlab = "datetime", ylab = "Global_reactive_power")
}
)
png (file="plot4.png",width=480,height=480,units = "px")
par(mfrow = c(2, 2))
with(Feb1_2_new,
{
plot(DateTime, Global_active_power, type= "l", xlab = NA, ylab = "Global Active Power")
plot(DateTime, Voltage, type= "l", xlab = "datetime", ylab = "Global Active Power")
plot(DateTime, Sub_metering_1, xlab = NA, ylab = "Energy sub metering",type="n")
points(DateTime, Sub_metering_1, col = "black", type="l")
points(DateTime, Sub_metering_2, col = "red", type="l")
points(DateTime, Sub_metering_3, col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type= "l", xlab = "datetime", ylab = "Global_reactive_power")
}
)
dev.off()
source('~/Olga/Git/datasciencecoursera/EDA_W1_CourseProject.r')
getwd()
source('~/Olga/Git/datasciencecoursera/EDA_W1_CourseProject.r')
#Exploratory Data Analysis Week 1 Course Project 1
#Download data and unzip data
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile = "./EDA_w1_pr1_elpowercons.zip")
list.files ()
dateDownloaded<-date()
unzip ("EDA_w1_pr1_elpowercons.zip")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 1 Global Active Power histogram
png (file="plot1.png",width=480,height=480,units = "px")
hist(Feb1_2_new[ ,"Global_active_power"], col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
# Plot 2 Global Active Power over time
png (file="plot2.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)")
dev.off()
# Plot 3 Global Active Power over time
png (file="plot3.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Energy sub metering",type="n")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], col = "black", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_2"], col = "red", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_3"], col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
# Plot 4 Global Active Power over time
png (file="plot4.png",width=480,height=480,units = "px")
par(mfrow = c(2, 2))
with(Feb1_2_new,
{
plot(DateTime, Global_active_power, type= "l", xlab = NA, ylab = "Global Active Power")
plot(DateTime, Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
plot(DateTime, Sub_metering_1, xlab = NA, ylab = "Energy sub metering",type="n")
points(DateTime, Sub_metering_1, col = "black", type="l")
points(DateTime, Sub_metering_2, col = "red", type="l")
points(DateTime, Sub_metering_3, col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type= "l", xlab = "datetime", ylab = "Global_reactive_power")
}
)
dev.off()
../
./
cwd(../)
cwd(../Git)
setwd(..?)
setwd(../)
getwd()
setwd(""C:/Users/Tuomas/Documents/Olga")
setwd(C:/Users/Tuomas/Documents/Olga")
setwd("C:/Users/Tuomas/Documents/Olga")
list.files()
setwd("Git)
setwd("Git")
list.files()
setwd("ExData_Plotting1")
list.files()
setwd("ExData_Plotting1")
list.files()
#Exploratory Data Analysis Week 1 Course Project 1 Plot 1
#Download data and unzip data
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile = "./EDA_w1_pr1_elpowercons.zip")
list.files ()
dateDownloaded<-date()
unzip ("EDA_w1_pr1_elpowercons.zip")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 1 Global Active Power histogram
png (file="plot1.png",width=480,height=480,units = "px")
hist(Feb1_2_new[ ,"Global_active_power"], col="red", main="Global Active Power", xlab = "Global Active Power (kilowatts)", ylab = "Frequency")
dev.off()
#Exploratory Data Analysis Week 1 Course Project 1 Plot 2
#Download data and unzip data
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile = "./EDA_w1_pr1_elpowercons.zip")
list.files ()
dateDownloaded<-date()
unzip ("EDA_w1_pr1_elpowercons.zip")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 2 Global Active Power over time
png (file="plot2.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Global_active_power"], type= "l", xlab = NA, ylab = "Global Active Power (kilowatts)")
dev.off()
#Exploratory Data Analysis Week 1 Course Project 1 Plot 3
#Download data and unzip data
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile = "./EDA_w1_pr1_elpowercons.zip")
list.files ()
dateDownloaded<-date()
unzip ("EDA_w1_pr1_elpowercons.zip")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 3 Global Active Power over time
png (file="plot3.png",width=480,height=480,units = "px")
plot(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], xlab = NA, ylab = "Energy sub metering",type="n")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_1"], col = "black", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_2"], col = "red", type="l")
points(Feb1_2_new[ ,"DateTime"],Feb1_2_new[ ,"Sub_metering_3"], col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
dev.off()
#Exploratory Data Analysis Week 1 Course Project 1
#Download data and unzip data
fileUrl <- "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip"
download.file(fileUrl,destfile = "./EDA_w1_pr1_elpowercons.zip")
list.files ()
dateDownloaded<-date()
unzip ("EDA_w1_pr1_elpowercons.zip")
#Load and extract data for 1-2.2.2007, save in a new file, remove old stuff from environment
powerConsumption<-read.table ("household_power_consumption.txt",header=TRUE,sep=";")
Feb1_2 <- powerConsumption[powerConsumption["Date"]=="1/2/2007"|powerConsumption["Date"]=="2/2/2007", ]
write.table(Feb1_2, file="household_power_consumption_Feb1-2.csv")
rm(list=ls())
Feb1_2 <-read.table ("household_power_consumption_Feb1-2.csv",header=TRUE,sep=" ")
#Convert Date and Time variables to Date/Time classes
tmp<-as.Date(Feb1_2[ ,"Date"],"%d/%m/%Y", tz="America/California")
Feb1_2[ ,"Date"]<-tmp #replace raw Date table with R-formatted
DateTime<-as.POSIXct(paste(Feb1_2$Date, Feb1_2$Time), format="%Y-%m-%d %H:%M:%S", "EST")
#Time_edited<-strptime(Feb1_2[ ,"Time"],"%T") +not used, initially for transforming Time
Feb1_2_new<-data.frame(Feb1_2,DateTime) #append to a new data frame (couldn't replace Time without R yelling(too many variables replacing too few) )
# Plot 4 Global Active Power over time
png (file="plot4.png",width=480,height=480,units = "px")
par(mfrow = c(2, 2))
with(Feb1_2_new,
{
plot(DateTime, Global_active_power, type= "l", xlab = NA, ylab = "Global Active Power")
plot(DateTime, Voltage, type= "l", xlab = "datetime", ylab = "Voltage")
plot(DateTime, Sub_metering_1, xlab = NA, ylab = "Energy sub metering",type="n")
points(DateTime, Sub_metering_1, col = "black", type="l")
points(DateTime, Sub_metering_2, col = "red", type="l")
points(DateTime, Sub_metering_3, col = "blue", type="l")
legend("topright", col = c("black", "red", "blue"), lty = c(1,1,1), lwd=c(1,1,1), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(DateTime, Global_reactive_power, type= "l", xlab = "datetime", ylab = "Global_reactive_power")
}
)
dev.off()
